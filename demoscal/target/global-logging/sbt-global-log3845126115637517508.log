[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Admin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 1.8.0_341)
[debug]       Load.loadUnit: plugins took 77.4041ms
[debug]       Load.loadUnit: defsScala took 0.2939ms
[debug] [Loading] Scanning directory C:\Users\Admin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Admin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.7754 ms
[debug]           Load.resolveProject(global-plugins) took 60.7346ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Admin\.sbt\1.0\plugins, plugins: List(<none>))) took 240.2761ms
[debug] [Loading] Done in C:\Users\Admin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 270.5871ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2491ms
[debug]     Load.loadUnit(file:/C:/Users/Admin/.sbt/1.0/plugins/, ...) took 356.847ms
[debug]   Load.apply: load took 521.8668ms
[debug]   Load.apply: resolveProjects took 5.6494ms
[debug]   Load.apply: finalTransforms took 49.4962ms
[debug]   Load.apply: config.delegates took 8.8808ms
[debug]   Load.apply: Def.make(settings)... took 371.1972ms
[debug]   Load.apply: structureIndex took 86.4534ms
[debug]   Load.apply: mkStreams took 1.3987ms
[info] loading global plugins from C:\Users\Admin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5688.0713ms
[debug]           Load.loadUnit: plugins took 24.3526ms
[debug]           Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory D:\Nam 4\HK-1\Real Time\demoscal\project
[debug]             Load.loadUnit: mkEval took 10.4654ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Nam 4\HK-1\Real Time\demoscal\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8099 ms
[info] loading settings for project demoscal-build from idea.sbt ...
[debug]               Load.resolveProject(demoscal-build) took 6.2504ms
[debug]             Load.loadTransitive: finalizeProject(Project(id demoscal-build, base: D:\Nam 4\HK-1\Real Time\demoscal\project, plugins: List(<none>))) took 9.6599ms
[debug] [Loading] Done in D:\Nam 4\HK-1\Real Time\demoscal\project, returning: (demoscal-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2898.949ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.3709ms
[debug]         Load.loadUnit(file:/D:/Nam%204/HK-1/Real%20Time/demoscal/project/, ...) took 2930.6191ms
[debug]       Load.apply: load took 2932.2065ms
[debug]       Load.apply: resolveProjects took 0.1706ms
[debug]       Load.apply: finalTransforms took 14.7679ms
[debug]       Load.apply: config.delegates took 1.6856ms
[debug]       Load.apply: Def.make(settings)... took 133.5441ms
[debug]       Load.apply: structureIndex took 35.8705ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from D:\Nam 4\HK-1\Real Time\demoscal\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7610.7844ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory D:\Nam 4\HK-1\Real Time\demoscal
[debug]       Load.loadUnit: mkEval took 0.2112ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5088 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 67.9413ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Nam 4\HK-1\Real Time\demoscal, plugins: List(<none>))) took 74.7911ms
[debug] [Loading] Done in D:\Nam 4\HK-1\Real Time\demoscal, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1319.2192ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.5436ms
[debug]   Load.loadUnit(file:/D:/Nam%204/HK-1/Real%20Time/demoscal/, ...) took 8941.7295ms
[debug] Load.apply: load took 8944.3906ms
[debug] Load.apply: resolveProjects took 0.3401ms
[debug] Load.apply: finalTransforms took 40.5343ms
[debug] Load.apply: config.delegates took 0.616ms
[debug] Load.apply: Def.make(settings)... took 116.4117ms
[debug] Load.apply: structureIndex took 51.3952ms
[debug] Load.apply: mkStreams took 0.006ms
[info] set current project to demoscal (in build file:/D:/Nam%204/HK-1/Real%20Time/demoscal/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50790 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50790, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to demoscal (in build file:/D:/Nam%204/HK-1/Real%20Time/demoscal/)
[debug] > Exec(idea-shell, None, None)
